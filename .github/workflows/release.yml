
name: Directord release

on:
  release:
    types:
      - created

jobs:
  irc:
    runs-on: ubuntu-latest
    steps:
      - name: IRC Release Notification
        uses: Gottox/irc-message-action@v1
        with:
          server: irc.libera.chat
          channel: '#directord'
          nickname: directord-bot
          message: >
            Directord version ${{ github.event.release.tag_name }} has been released!
            ${{ github.event.release.html_url }}
      - name: IRC Release Notification
        uses: Gottox/irc-message-action@v1
        with:
          server: irc.libera.chat
          channel: '#directord'
          nickname: directord-bot
          message: >
            /topic Latest Directord Release ${{ github.event.release.html_url }}
            -- checkout the pages for the latest project information directord.com

  tweet:
    runs-on: ubuntu-latest
    steps:
      - id: get-body
        run: |
          BODY='''${{ github.event.release.body }}'''
          echo """::set-output name=body::${BODY:0:77}..."""
      - uses: ethomson/send-tweet-action@v1
        with:
          consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          status: |
            Directord version ${{ github.event.release.tag_name }} has been released!

            ${{ steps.get-body.outputs.body }}

            Checkout the Pages - https://directord.com
            #Python Package - https://pypi.org/project/directord
            ${{ github.event.release.html_url }}

  pypi_push_and_publish:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Build the python package
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade twine build wheel setuptools
        python3 -m build --no-isolation
    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/directord*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_stable_container:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to Quay.io
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_ROBOT_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          sshnaidm/directord:stable
          sshnaidm/directord:${{ github.event.release.tag_name }}
          quay.io/sshnaidm/directord:stable
          quay.io/sshnaidm/directord:${{ github.event.release.tag_name }}
        file: Containerfile
